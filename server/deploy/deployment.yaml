apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: mbox-rag-server
  name: mbox-rag-server
  labels:
    app: mbox-rag-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mbox-rag-server
  template:
    metadata:
      labels:
        app: mbox-rag-server
    spec:
      containers:
        - name: mbox-rag-server
          image: quay.io/arkmq-org/mbox-rag-server:latest
          env:
            - name: AWS_ACCESS_KEY_ID
              value: 'aws_access_key_id'
            - name: AWS_SECRET_ACCESS_KEY
              value: 'aws_secret_access_key'
            - name: AWS_REGION
              value: 'aws_region'
            - name: CORS_FRONTEND_URL
              value: 'http://mboxrag-frontend-mbox-rag-frontend.apps-crc.testing'
            - name: NODE_EXTRA_CA_CERTS
              value: '/var/jolokia-api-server-selfsigned-ca-cert-secret/ca.crt'
            - name: S3_BUCKET_DB
              value: 'amq-rag-db'
            - name: S3_BUCKET_MAILS
              value: 'amq-rag-mails'
            - name: URI
              value: '/tmp/db/milvus_demo.db'
            - name: CREATE_MILVUS_DATABASE
              value: 'False'
            - name: CHUNK_DOCS
              value: 'False'
            - name: CHUNK_SIZE
              value: '2000'
            - name: CHUNK_OVERLAP
              value: '200'
            - name: MBOX_DIR
              value: '/tmp/mails'
            - name: MODEL_API_URL
              value: 'model-api-url'
            - name: MODEL
              value: 'model-name'
            - name: MODEL_ACCESS_TOKEN
              value: 'model-token'
          ports:
            - containerPort: 8000
              protocol: TCP
          args: ['run', 'main.py']
          command:
            - fastapi
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
      restartPolicy: Always
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
